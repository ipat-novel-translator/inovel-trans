**Reference**
=============

# 📌 **สรุประบบแปลนิยายจีน → ไทย (ip-Trans)**

## 1. **สถานะปัจจุบัน (Single-Novel System)**

### 🔧 เทคโนโลยีหลัก

* **ภาษา**: Python
* **GUI**: Flet 0.28.3 (แก้ glossary)
* **AI**: Google Gemini API ผ่าน Vertex AI (จ่ายตามการใช้งาน)
* **จัดการเวอร์ชัน**: Git + auto-commit
* **โครงสร้างไฟล์หลัก**: `.txt` (เสถียร, diff ได้ง่าย)
* **Package หลัก**: `google-generativeai`, `python-dotenv`, `structlog`, `tqdm`, `flet`, `pyyaml`, `tiktoken`
* ❌ **ไม่ใช้**: `google-cloud-aiplatform`, `pyinstaller`, `sqlite3`

### 📂 โครงสร้างโฟลเดอร์เดิม

```
ip-Trans/
├── chapters_src/               # ต้นฉบับจีน
├── chapters_translated/        # ผลลัพธ์แปล
├── glossary.yaml               # พจนานุกรมศัพท์เฉพาะ
├── logs/, backups/, .meta/     # log + backup + metadata
├── ip-Trans.py                 # แปลบท
├── glossary_editor.py          # GUI แก้ไข glossary
├── reprocess.py                # อัปเดตบทเดิมเมื่อ glossary เปลี่ยน
└── reprocess_all_outdated.py   # อัปเดตทุกบท + รายงาน HTML
```

### ✅ ฟีเจอร์หลัก

1. **แปลบทใหม่** → Gemini + glossary
2. **Glossary Editor (GUI)** → มีกรองวันที่/บท, auto commit
3. **Reprocess** → อัปเดตเฉพาะคำที่ glossary เปลี่ยน
4. **Batch Processing** → รองรับ `--range`, `--files`, `--skip-existing` + progress bar
5. **ระบบเสริม**: cache SQLite, auto-backup, metadata ต่อบท, smart chunking

### 🛠️ Workflow ปัจจุบัน

```bash
python ip-Trans.py --range 1 10         # แปลบทใหม่
python glossary_editor.py               # แก้ glossary
python reprocess_all_outdated.py        # อัปเดตบททั้งหมดที่ glossary กระทบ
```

---

## 2. **ปัญหาเชิงเทคนิค & การออกแบบ**

### 🔍 ปัญหาหลัก

* AI **ไม่เชื่อฟัง glossary 100%** → มักถอดเสียง หรือสร้างคำใหม่
* **Reprocess.py** ทำงานแทนที่จาก “คำไทยเดิม” เท่านั้น → ถ้า AI แปลเพี้ยน เช่น "เสินหลิน" จะไม่ถูกแทน
* คำจีนหลุดเข้าไปในบทแปล เพราะ AI ไม่แปล หรือ auto-add glossary ไม่ถูกนำมาใช้

### 🧠 วิเคราะห์เชิงลึก

* การพยายาม “บังคับ” LLM ให้ใช้ glossary ทุกคำ → ทำให้ผลแปลไม่ลื่น
* สิ่งสำคัญคือ **ความลื่นไหล** และ **การควบคุมคุณภาพด้วยมนุษย์ภายหลัง**

### ❌ แนวทางที่ไม่เลือก

* **Pre-injection** (แทนจีนด้วยไทยก่อนส่ง) → AI มักแปลซ้ำ
* **บังคับคงคำจีนในผลลัพธ์** → AI ยังแปล/ถอดเสียงเอง
* **แทนที่หลายรูปแบบ** (จีน+ถอดเสียง+ไทย) → ครอบคลุมขึ้น แต่ไม่ 100%

### ✅ ข้อสรุปที่เลือก

* ระบบปัจจุบัน **“โอเคแล้ว”**

  * แปลลื่นไหล อ่านสนุก
  * Reprocess แก้ย้อนหลังได้
  * ให้ **มนุษย์เป็นตัวกรองคุณภาพขั้นสุดท้าย**

### 📌 ปรับปรุงแนะนำ

* เพิ่มการตรวจจับคำจีนที่หลุดในบทแปล
* Reprocess.py → ให้แทนที่ทั้ง “คำจีน” และ “คำไทยเดิม”
* ใช้ **glossary_editor.py** เป็นศูนย์กลางการจัดการคำ

### 💡 หลักการออกแบบ

> **“อย่าพยายามควบคุม AI ทุกอย่าง แต่สร้างวงจร feedback ให้มนุษย์แก้ได้”**
> นี่คือหัวใจของระบบแปลคุณภาพสูง

---

## 3. **แผนพัฒนาใหม่: Multi-Novel System**

### 🎯 เป้าหมาย

* รองรับ **หลายนิยาย (multi-novel)**
* แยก **glossary ต่อเรื่อง** ไม่ปนกัน
* จัดการโปรเจกต์อย่างเป็นระบบ

### 📂 โครงสร้างโฟลเดอร์ใหม่

```
ip-trans/
├── novels/
│   ├── novel_A/
│   │   ├── chapters_src/
│   │   ├── chapters_translated/
│   │   ├── logs/, backups/, reports/, storage/
│   │   └── glossary.yaml
│   └── novel_B/
│       └── ...
│
├── ip-Trans.py                # ใช้ได้กับทุก novel
├── reprocess.py
├── reprocess_all_outdated.py
├── glossary_editor.py
├── main_gui.py (ใหม่)         # GUI รวม
└── config (.env, vertex.json)
```

### 🛠️ สิ่งที่ทำแล้ว

1. คัดลอกโฟลเดอร์เดิม → `ip-Trans-Multi`
2. ลบ venv เดิม สร้างใหม่ + ติดตั้ง package ที่จำเป็น
3. ย้ายข้อมูลแต่ละนิยาย → `novels/novel_X/`
4. อัปเดต `.gitignore` → commit & push แล้ว
5. ตรวจสอบแล้วว่า:

   * `google-generativeai` ใช้ Vertex AI ได้เลย
   * `sqlite3` เป็น built-in

### 🔧 สิ่งที่จะทำต่อ

1. ปรับสคริปต์หลักให้รับ `--novel`

   ```python
   base = f"novels/{novel_name}"
   SRC_DIR = os.path.join(base, "chapters_src")
   GLOSSARY_FILE = os.path.join(base, "glossary.yaml")
   ```
2. ทดสอบ CLI หลายนิยาย

   ```bash
   python ip-Trans.py --novel novel_A --range 1 10
   python glossary_editor.py --novel novel_A
   python reprocess.py --novel novel_A chapters_src/sa_0001.txt
   python reprocess_all_outdated.py --novel novel_A
   ```
3. สร้าง **main_gui.py (PySimpleGUI)**

   * มี 4 ปุ่ม: แปลบท, แก้ glossary, reprocess บทเดียว, reprocess ทั้งเรื่อง
   * มี dropdown ให้เลือกนิยาย

### ⚠️ ข้อควรระวัง

* `.env` มี absolute path → ต้องแก้เมื่อย้ายโฟลเดอร์
* venv ผูกกับ path → ควรลบแล้วสร้างใหม่ทุกครั้งที่คัดลอก
* ตรวจสอบ region ของโมเดล (`gemini-2.5-flash` รองรับ `asia-southeast1`)

### ✅ หลักการออกแบบใหม่

* **ไม่คัดลอกสคริปต์ซ้ำ** → ใช้สคริปต์เดียวทุกเรื่อง
* **ไม่แก้ logic หลัก** → แค่เปลี่ยนวิธีโหลด path
* **CLI = แกนหลัก** → GUI แค่ wrapper
* แต่ละนิยายเป็น **independent project**

---

## 📦 ผลลัพธ์สุดท้ายที่ต้องการ

* ระบบแปลจีน → ไทย ที่:

  * รองรับ **หลายเรื่อง** อย่างเป็นระบบ
  * ใช้งานได้ทั้ง **CLI (power user)** และ **GUI (ทั่วไป)**
  * รักษา **ความเรียบง่ายของระบบเดิม**
  * **พร้อมขยาย**: เพิ่มนิยายใหม่ได้ทันที

---

# 📌 Key Takeaways

* ระบบ ip-Trans ปัจจุบัน: **พร้อมใช้งานจริง** แปลเร็ว + ลื่นไหล + มนุษย์คุมคุณภาพ
* ปัญหาหลัก: **AI ไม่เชื่อ glossary 100%** แต่แก้ได้ด้วย reprocess + feedback
* แผนพัฒนา: **Multi-Novel system** แยก glossary ต่อเรื่อง + GUI รวม + path dynamic
* หลักการออกแบบ: **ลดการบังคับ AI → เพิ่ม feedback loop** + **รักษาความเรียบง่าย**

---


